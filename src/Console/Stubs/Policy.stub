<?php
namespace {{ policies_namespace }};

{{ use_statement_for_policy }}
{{ use_statement_for_user_model }}
use {{ models_namespace }}\{{ model }};

class {{ policy }}Policy extends {{ base_policy }}
{
    /**
    * Determine whether the user can view any models.
    *
    * @param  User $user
    * @return bool
    */
    public function viewAny(User $user): bool
    {
        return $user != null;
    }

    /**
    * Determine whether the user can view the model.
    *
    * @param  User    $user
    * @param  {{model}} ${{ modelVariable }}
    * @return bool
    */
    public function view(User $user, {{model}} ${{ modelVariable }}): bool
    {
        return ${{ modelVariable }}->exists && $user->exists;
    }

    /**
    * Determine whether the user can create models.
    *
    * @param  User $user
    * @return bool
    */
    public function create(User $user): bool
    {
        return $user != null;
    }

    /**
    * Determine whether the user can update the model.
    *
    * @param  User    $user
    * @param  {{model}} ${{ modelVariable }}
    * @return bool
    */
    public function update(User $user, {{model}} ${{ modelVariable }}): bool
    {
        return ${{ modelVariable }}->exists && $user->exists;
    }

    /**
    * Determine whether the user can delete the model.
    *
    * @param  User    $user
    * @param  {{model}} ${{ modelVariable }}
    * @return bool
    */
    public function delete(User $user, {{model}} ${{ modelVariable }}): bool
    {
        return ${{ modelVariable }}->exists && $user->exists;
    }

    /**
    * Determine whether the user can restore the model.
    *
    * @param  User    $user
    * @param  {{model}} ${{ modelVariable }}
    * @return bool
    */
    public function restore(User $user, {{model}} ${{ modelVariable }}): bool
    {
        return ${{ modelVariable }}->exists && $user->exists;
    }

    /**
    * Determine whether the user can permanently delete the model.
    *
    * @param  User    $user
    * @param  {{model}} ${{ modelVariable }}
    * @return bool
    */
    public function forceDelete(User $user, {{model}} ${{ modelVariable }}): bool
    {
        return ${{ modelVariable }}->exists && $user->exists;
    }
}
